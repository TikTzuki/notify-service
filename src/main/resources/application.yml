server:
  port: ${SERVER_PORT:1130}
spring:
  data:
    mongodb:
      uri: ${MONGO_URI:mongodb://10.40.3.1:27017/notification}
  mail:
    host: smtp.gmail.com
    port: 587
    from_email: ${FROM_MAIL:longtpt@unicloud.com.vn}
    username: ${MAIL_USERNAME:longtpt@unicloud.com.vn}
    password: ${MAIL_PASSWORD:Ld201199-}
    properties.mail.smtp:
      auth: true
      starttls.enable: true
      ssl.trust: smtp.gmail.com
  mvc:
    format:
      date-time: iso
      date: iso
      time: iso
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:10.40.3.1:9092}
    properties:
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY_URL:http://10.40.3.1:8081}
    consumer:
      group-id: notificationService
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
      #      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
logging:
  level:
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG
    org.apache.kafka: INFO
    org.apache.kafka.common.metrics: INFO
    org.apache.kafka.clients.consumer.internals: INFO
    org.apache.kafka.clients.consumer.internals.Fetcher: INFO
springdoc:
  swagger-ui:
    path: /api